name: Smart-Agriculture-Field-Monitoring-System

services:
  mosquitto-SA-FMS:
    build:
      context: Mosquitto-SA-FMS
      dockerfile: Dockerfile
    image: eclipse-mosquitto_sa_fms:latest
    ports:
      - "1883:1883"
    volumes:
      - mosquitto_sa_fms_data:/mosquitto/data
      - mosquitto_sa_fms_logs:/mosquitto/log
    networks:
      - se4iot-SA-FMS-network
    # restart: always

  sensor-simulator-SA-FMS:
    build:
      context: sensor-simulator
      dockerfile: Dockerfile
    image: sensor-simulator_sa_fms:latest
    env_file: se4iot-SA-FMS.env
    volumes:
      - sensor_simulator_sa_fms_data:/app
    networks:
      - se4iot-SA-FMS-network
    # restart: always
    depends_on:
      - mosquitto-SA-FMS
    tty: true

  node-red-SA-FMS:
    build:
      context: Node-RED-SA-FMS
      dockerfile: Dockerfile
    image: nodered_sa_fms:latest
    env_file: se4iot-SA-FMS.env
    environment:
      - BOT_TOKEN=<TELEGRAMBOT TOKEN HERE PLEASE!>
    ports:
      - "1880:1880" # Porta web di Node-RED
    volumes:
      - nodered_sa_fms_data:/data
    networks:
      - se4iot-SA-FMS-network
    # restart: always
    depends_on:
      - mosquitto-SA-FMS
      - influxdb-SA-FMS
      - grafana-SA-FMS
      - sensor-simulator-SA-FMS

  influxdb-SA-FMS:
    build:
      context: InfluxDB-SA-FMS
      dockerfile: Dockerfile
    image: influxdb_sa_fms:latest
    env_file: se4iot-SA-FMS.env
    ports:
      - "8086:8086"
    volumes:
      - influxdb_sa_fms_data:/var/lib/influxdb2
      - influxdb_sa_fms_config:/etc/influxdb2
    networks:
      - se4iot-SA-FMS-network

  telegraf-SA-FMS:
    build:
      context: Telegraf-SA-FMS
      dockerfile: Dockerfile
    image: telegraf_sa_fms:latest
    env_file: se4iot-SA-FMS.env
    volumes:
      - telegraf_sa_fms_data:/var/lib/telegraf
    networks:
      - se4iot-SA-FMS-network
    # restart: always
    depends_on:
      - mosquitto-SA-FMS
      - influxdb-SA-FMS

  maildev-SA-FMS:
    image: maildev/maildev:latest
    env_file: se4iot-SA-FMS.env
    volumes:
      - maildev_sa_fms_data:/data
    ports:
      - "1080:1080"
      - "1025:1025"
    networks:
      - se4iot-SA-FMS-network
    # restart: always

  grafana-renderer-SA-FMS:
    image: grafana/grafana-image-renderer:latest
    ports:
      - "8081:8081"
    volumes:
      - grafana_renderer_sa_fms_data:/var/lib/renderer
    networks:
      - se4iot-SA-FMS-network
    # restart: always

  grafana-SA-FMS:
    build:
      context: Grafana-SA-FMS
      dockerfile: Dockerfile
    image: grafana_sa_fms:latest
    env_file: se4iot-SA-FMS.env
    ports:
      - "3000:3000"
    volumes:
      - grafana_sa_fms_data:/var/lib/grafana
    networks:
      - se4iot-SA-FMS-network
    # restart: always
    depends_on:
      - influxdb-SA-FMS
      - maildev-SA-FMS
      - grafana-renderer-SA-FMS

volumes:
  mosquitto_sa_fms_data:
  mosquitto_sa_fms_logs:
  nodered_sa_fms_data:
  influxdb_sa_fms_data:
  influxdb_sa_fms_config:
  telegraf_sa_fms_data:
  maildev_sa_fms_data:
  grafana_renderer_sa_fms_data:
  grafana_sa_fms_data:
  sensor_simulator_sa_fms_data:

networks:
  se4iot-SA-FMS-network:
    driver: bridge