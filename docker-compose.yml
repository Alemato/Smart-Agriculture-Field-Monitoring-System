version: '3.8'

name: Smart-Agriculture-Field-Monitoring-System

services:
  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto-SA-FMS
    ports:
      - "1883:1883"
    volumes:
      - mosquitto_sa_fms_data:/mosquitto
      - ./mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
    networks:
      - se4iot-SA-FMS-network
    # restart: always

  node-red:
    build:
      context: ./nodered
      dockerfile: Dockerfile
    image: nodered_sa_fms:latest
    container_name: node-red-SA-FMS
    environment:
      - TZ=Europe/Amsterdam
      - BOT_TOKEN=<TELEGRAMBOT TOKEN HERE PLEASE!>
    ports:
      - "1880:1880" # Porta web di Node-RED
    volumes:
      - nodered_sa_fms_data:/data
    networks:
      - se4iot-SA-FMS-network
    # restart: always
    depends_on:
      - mosquitto

  influxdb:
    image: influxdb:2.7.4
    container_name: influxdb-SA-FMS
    env_file:
      - ./influxdb/influx.env
    volumes:
      - influxdb_sa_fms_data:/var/lib/influxdb2
      - ./influxdb/config:/etc/influxdb2:rw
    ports:
      - "8086:8086"
    networks:
      - se4iot-SA-FMS-network

  telegraf:
    image: telegraf:latest
    container_name: telegraf-SA-FMS
    depends_on:
      - influxdb
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    env_file:
      - ./influxdb/influx.env
    networks:
      - se4iot-SA-FMS-network
#    restart: always

  grafana:
    container_name: grafana-SA-FMS
#    restart: always
#    build: ./grafana
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/data:/var/lib/grafana:rw
    networks:
      - se4iot-SA-FMS-network
    depends_on:
      - influxdb
    ports:
      - 3000:3000

volumes:
  mosquitto_sa_fms_data:
  nodered_sa_fms_data:
  influxdb_sa_fms_data:

networks:
  se4iot-SA-FMS-network:
    name: se4iot-SA-FMS-network
    driver: bridge