name: Smart-Agriculture-Field-Monitoring-System

services:
  mosquitto:
    build:
      context: Mosquitto-SA-FMS
      dockerfile: Dockerfile
    image: eclipse-mosquitto_sa_fms:latest
    container_name: mosquitto-SA-FMS
    ports:
      - "1883:1883"
    volumes:
      - mosquitto_sa_fms_data:/mosquitto
    networks:
      - se4iot-SA-FMS-network
    # restart: always

  node-red:
    build:
      context: Node-RED-SA-FMS
      dockerfile: Dockerfile
    image: nodered_sa_fms:latest
    container_name: node-red-SA-FMS
    env_file:
      - se4iot-SA-FMS.env
    environment:
      - BOT_TOKEN=<TELEGRAMBOT TOKEN HERE PLEASE!>
    ports:
      - "1880:1880" # Porta web di Node-RED
    volumes:
      - nodered_sa_fms_data:/data
    networks:
      - se4iot-SA-FMS-network
    # restart: always
    depends_on:
      - mosquitto

  influxdb:
    build:
      context: InfluxDB-SA-FMS
      dockerfile: Dockerfile
    image: influxdb_sa_fms:latest
    container_name: influxdb-SA-FMS
    env_file:
      - se4iot-SA-FMS.env
    ports:
      - "8086:8086"
    volumes:
      - influxdb_sa_fms_data:/var/lib/influxdb2
    networks:
      - se4iot-SA-FMS-network

  telegraf:
    build:
      context: Telegraf-SA-FMS
      dockerfile: Dockerfile
    image: telegraf_sa_fms:latest
    container_name: telegraf-SA-FMS
    env_file:
      - se4iot-SA-FMS.env
    volumes:
      - telegraf_sa_fms_data:/var/lib/telegraf
    networks:
      - se4iot-SA-FMS-network
    # restart: always
    depends_on:
      - mosquitto
      - influxdb

  maildev:
    image: maildev/maildev:latest
    container_name: maildev-SA-FMS
    env_file:
      - se4iot-SA-FMS.env
    volumes:
      - maildev_sa_fms_data:/data
    ports:
      - "1080:1080"
      - "1025:1025"
    networks:
      - se4iot-SA-FMS-network
    # restart: always

  grafana-renderer:
    image: grafana/grafana-image-renderer:latest
    container_name: grafana-renderer-SA-FMS
    ports:
      - "8081:8081"
    volumes:
      - grafana_renderer_sa_fms_data:/var/lib/renderer
    networks:
      - se4iot-SA-FMS-network
    # restart: always

  grafana:
    build:
      context: Grafana-SA-FMS
      dockerfile: Dockerfile
    image: grafana_sa_fms:latest
#    image: grafana/grafana:11.4.0
    container_name: grafana-SA-FMS
    env_file:
      - se4iot-SA-FMS.env
    ports:
      - "3000:3000"
    volumes:
      - grafana_sa_fms_data:/var/lib/grafana
#      - ./Grafana-SA-FMS/data:/var/lib/grafana
    networks:
      - se4iot-SA-FMS-network
    # restart: always
    depends_on:
      - influxdb
      - maildev
      - grafana-renderer

volumes:
  mosquitto_sa_fms_data:
  nodered_sa_fms_data:
  influxdb_sa_fms_data:
  telegraf_sa_fms_data:
  maildev_sa_fms_data:
  grafana_renderer_sa_fms_data:
  grafana_sa_fms_data:

networks:
  se4iot-SA-FMS-network:
    name: se4iot-SA-FMS-network
    driver: bridge